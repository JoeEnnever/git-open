#!/usr/bin/env bash

# Opens the github page to open a PR for the branch in your browser
# https://github.com/JoeEnnever/git-open/
#
# git pr
# git pr [remote] [branch]


# are we in a git repo?
git rev-parse --is-inside-work-tree &>/dev/null

if [[ $? != 0 ]]; then
  echo "Not a git repository."
  exit 1
fi


# assume origin if not provided
# fallback to upstream if neither is present.
remote="origin"
if [ -n "$1" ]; then
  remote="$1"
fi

remote_url="remote.${remote}.url"

giturl=$(git config --get "$remote_url")
if [ -z "$giturl" ]; then
  echo "$remote_url not set."
  exit 1
fi

# get current branch
if [ -z "$2" ]; then
  branch=$(git symbolic-ref -q --short HEAD)
else
  branch="$2"
fi

if [ -z "$branch" ]; then
  echo "git pr only works on branches"
  exit 1
fi

# Make # and % characters url friendly
#   github.com/paulirish/git-open/pull/24
branch=${branch//%/%25} && branch=${branch//#/%23}

# URL normalization
# Github gists
if grep -q gist.github <<<$giturl; then
  echo "Sorry, github gists aren't supported"
  exit 1

# Github
elif grep -q github <<<$giturl; then
  giturl=${giturl/git\@github\.com\:/https://github.com/}

  # handle SSH protocol (links like ssh://git@github.com/user/repo)
  giturl=${giturl/#ssh\:\/\/git\@github\.com\//https://github.com/}

else
  echo "Sorry, only github urls supported, not $giturl"
  exit 1
fi

giturl=${giturl%\.git}
giturl="${giturl}/compare/${branch}?expand=1"

# simplify URL for master
giturl=${giturl/tree\/master/}

# get current open browser command
case $( uname -s ) in
  Darwin)  open=open;;
  MINGW*)  open=start;;
  CYGWIN*) open=cygstart;;
  *)       open=${BROWSER:-xdg-open};;
esac

# open it in a browser
$open "$giturl" &> /dev/null
exit 0

